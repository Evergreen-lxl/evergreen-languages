# Build options for parsers

# No more fake-gyp.py since some idiots do not update their bindings.gyp
# so we may as well as just maintain a set of flags by ourselves
# Additionally, since C++ scanners are deprecated,
# and literally only one language included in nvim-treesitter uses it,
# I will just ignore its existence.

# Fields:
# remote: string?
#     url to the git repository where the parser is hosted
#     may be omitted if only consists of queries from nvim-treesitter
# revision: string = 'HEAD'
#     revision to checkout to
#     can be a branch or tag
# generate: bool = True
#     whether the grammar needs to be generated
# std: string = 'c11'
#     C standard to use
# files: [str]
#     list of patterns of filenames to match to this languages

[c]
remote = 'https://github.com/tree-sitter/tree-sitter-c'
files = [ '%.c$' ]

[cpp]
remote = 'https://github.com/tree-sitter/tree-sitter-cpp'
files = [
	"%.h$",
	"%.cpp$", "%.hpp$",
	"%.cxx$", "%.hxx$",
	"%.c++$", "%.h++$",
	"%.cc$", "%.hh$",
	"%.inl$",
	"%.C$", "%.H$",
	"%.ino$"
]

[css]
remote = 'https://github.com/tree-sitter/tree-sitter-css'
file = [ '%.css$' ]

[html]
remote = 'https://github.com/tree-sitter/tree-sitter-html'
file = [ '%.html?$' ]

[html_tags]

[javascript]
remote = 'https://github.com/tree-sitter/tree-sitter-javascript'
files = [ '%.js$', '%.cjs$', '%.mjs$' ]

[julia]
remote = 'https://github.com/tree-sitter/tree-sitter-julia'
files = [ '%.jl$' ]

[lua]
remote = 'https://github.com/MunifTanjim/tree-sitter-lua'
files = [ '%.lua$' ]

[zig]
remote = 'https://github.com/maxxnino/tree-sitter-zig'
files = [ '%.zig$' ]
